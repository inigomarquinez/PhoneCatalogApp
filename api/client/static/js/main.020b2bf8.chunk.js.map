{"version":3,"sources":["resources/logos/gs-logo.png","serviceWorker.js","actions/index.js","components/ErrorDialog/index.js","components/ErrorDialog/ErrorDialog.js","components/PhoneDetailComponent/styles.css.js","components/PhoneDetailComponent/PhoneDetailComponent.js","components/PhoneDetailComponent/PhoneDetailComponentHOC.js","components/PhoneDetailComponent/index.js","components/PhonePreview/PhonePreview.js","components/PhonePreview/styles.css.js","components/PhonePreview/index.js","components/PhonePreview/PhonePreviewHOC.js","components/PhoneListContainer/PhoneListContainer.js","components/PhoneListContainer/styles.css.js","components/PhoneListContainer/PhoneListContainerHOC.js","components/PhoneListContainer/index.js","components/Spinner/index.js","components/Spinner/Spinner.js","components/Spinner/styles.css.js","components/AppRouter/AppRouterHOC.js","components/AppRouter/index.js","components/App/App.js","components/App/styles.css.js","components/App/AppHOC.js","components/App/index.js","reducers/index.js","theme/index.js","theme/theme.js","index.js","store/configureAppStore.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","ACTIONS","SET_DATA_LOADED","SET_LAST_SELECTED_PHONE_ID","SET_PHONE_LIST","SET_SELECTED_PHONE_ID","setSelectedPhoneId","payload","type","ErrorDialog","_ref","error","leftButtonHandler","leftButtonText","rightButtonHandler","rightButtonText","react_default","a","createElement","Dialog_default","open","aria-labelledby","aria-describedby","DialogTitle_default","id","DialogContent_default","DialogContentText_default","DialogActions_default","Button_default","onClick","color","tableHeight","concat","withMobileDialog","withStyles","theme","content","height","overflowY","images","display","flexDirection","overflowX","imgContainer","padding","img","tableContainer","table","backgroundColor","palette","primary","titleCell","fontWeight","textAlign","chip","margin","spacing","unit","description","whiteSpace","classes","fetchData","handleBuy","handleClose","phoneDetails","Fragment","fullScreen","onClose","disableTypography","Typography_default","align","variant","_","get","className","map","tile","index","key","src","protocol","alt","maxheight","width","Table_default","TableBody_default","TableRow_default","TableCell_default","Chip_default","label","paragraph","autoFocus","components_ErrorDialog","ReduxConnector","connect","state","selectedPhoneId","PhoneDetailComponentHOC","compose","withState","withHandlers","setError","setPhoneDetails","console","log","axios","url","method","data","query","then","result","catch","_ref2","_ref3","dispatch","lifecycle","componentDidMount","this","props","PhoneDetailComponent","card","&:hover","boxShadow","header","userSelect","media","paddingTop","paddingBottom","learMore","favorite","focus","onLearnMoreClick","phone","toogleFavorite","Card_default","raised","toString","CardHeader_default","title","name","titleTypographyProps","CardMedia_default","image","thumbnail","CardContent_default","summary","CardActions_default","Grid_default","container","alignItems","direction","item","xs","TextField_default","InputLabelProps","InputProps","readOnly","endAdornment","InputAdornment_default","position","fullWidth","value","price","IconButton_default","aria-label","Favorite_default","size","PhonePreviewHOC","withStateHandlers","PhonePreview","filters","brandList","filteredPhoneList","lastSelectedPhoneId","selectedBrands","setSelectedBrands","sm","md","lg","xl","FormControl_default","InputLabel_default","shrink","htmlFor","Select_default","onChange","e","target","input","Input_default","displayEmpty","multiple","brand","MenuItem_default","components_PhonePreview","phoneList","brands","uniq","PhoneListContainerHOC","defaultProps","withPropsOnChange","isEmpty","filter","includes","PhoneListContainer","Spinner","root","justifyContent","flexGrow","spinner","main","isDataLoaded","AppRouterHOC","branch","renderComponent","renderNothing","minHeight","flexWrap","alignContent","logo","cursor","body","footer","contactUs","goToGuideSmiths","AppRouter","AppHOC","phones","setDataLoaded","App","initialState","rootReducer","arguments","length","undefined","action","Object","objectSpread","createMuiTheme","typography","useNextVariants","teal","secondary","pink","ReactDOM","render","es","store","createStore","applyMiddleware","thunkMiddleware","styles","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.020b2bf8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gs-logo.296750d2.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/**\n * @file Definition of the redux actions.\n */\n\nconst ACTIONS = {\n  SET_DATA_LOADED: 'SET_DATA_LOADED',\n  SET_LAST_SELECTED_PHONE_ID: 'SET_LAST_SELECTED_PHONE_ID',\n  SET_PHONE_LIST: 'SET_PHONE_LIST',\n  SET_SELECTED_PHONE_ID: 'SET_SELECTED_PHONE_ID'\n};\n\nconst setDataLoaded = payload => ({\n  type: ACTIONS.SET_DATA_LOADED,\n  payload\n});\n\nconst setLastSelectedPhoneId = payload => ({\n  type: ACTIONS.SET_LAST_SELECTED_PHONE_ID,\n  payload\n});\n\nconst setPhoneList = payload => ({\n  type: ACTIONS.SET_PHONE_LIST,\n  payload\n});\n\nconst setSelectedPhoneId = payload => ({\n  type: ACTIONS.SET_SELECTED_PHONE_ID,\n  payload\n});\n\nexport default ACTIONS;\nexport { setDataLoaded, setLastSelectedPhoneId, setPhoneList, setSelectedPhoneId };","\nimport ErrorDialog from './ErrorDialog';\nexport default ErrorDialog;","/**\n * @file Error modal window.\n */\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\n/**\n * Error modal window.\n * @param {String}    error               - Error message, if any.\n * @param {function}  leftButtonHandler   - Function triggered when left button is pressed.\n * @param {String}    leftButtonText      - Text for left button.\n * @param {function}  rightButtonHandler  - Function triggered when right button is pressed.\n * @param {String}    rightButtonText     - Text for right button.\n */\nconst ErrorDialog = ({\n  error,\n  leftButtonHandler,\n  leftButtonText,\n  rightButtonHandler,\n  rightButtonText\n}) => (\n  <Dialog\n    open={error !== null}\n    aria-labelledby=\"alert-dialog-title\"\n    aria-describedby=\"alert-dialog-description\">\n    <DialogTitle id=\"alert-dialog-title\">{'Error'}</DialogTitle>\n    <DialogContent>\n      <DialogContentText id=\"alert-dialog-description\">{error}</DialogContentText>\n    </DialogContent>\n    <DialogActions>\n      <Button onClick={leftButtonHandler} color=\"primary\">\n        {leftButtonText}\n      </Button>\n      {rightButtonText && (\n        <Button onClick={rightButtonHandler} color=\"primary\">\n          {rightButtonText}\n        </Button>\n      )}\n    </DialogActions>\n  </Dialog>\n);\n\nErrorDialog.propTypes = {\n  error: PropTypes.string,\n  leftButtonHandler: PropTypes.func.isRequired,\n  leftButtonText: PropTypes.string.isRequired,\n  rightButtonHandler: PropTypes.func,\n  rightButtonText: PropTypes.string\n};\n\nexport default ErrorDialog;\n","const gridListHeight = '40%';\nconst tableHeight = `calc(100% - ${gridListHeight})`;\n\nexport default theme => ({\n  content: {\n    height: '100%',\n    overflowY: 'hidden'\n  },\n  images: {\n    display: 'flex',\n    flexDirection: 'row',\n    height: gridListHeight,\n    overflowX: 'auto'\n  },\n  imgContainer: {\n    padding: '15px'\n  },\n  img: {\n    height: '100%'\n  },\n  tableContainer: {\n    height: tableHeight,\n    overflowY: 'auto'\n  },\n  table: {\n    backgroundColor: theme.palette.primary[50]\n  },\n  titleCell: {\n    fontWeight: 900,\n    textAlign: 'right'\n  },\n  chip: {\n    margin: theme.spacing.unit\n  },\n  description: {\n    whiteSpace: 'pre-line'\n  }\n});\n","/**\n * @file Component that displays full details of a phone.\n */\n\nimport _ from 'lodash';\nimport { withStyles } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport withMobileDialog from '@material-ui/core/withMobileDialog';\n\nimport ErrorDialog from '../ErrorDialog';\nimport styles from './styles.css.js';\n\n/**\n * Component that displays full details of a phone.\n * @param {Object}    classes       - Object returned by withStyles method to apply CSS-in-JS styles to the component.\n * @param {String}    error         - Text that contains information in case some error occurs.\n * @param {Object}    fetchData     - Function that triggers fetching phone information from back-end.\n * @param {function}  handleBuy     - Function that opens a new web page to buy the phone.\n * @param {function}  handleClose   - Function that closes the current dialog.\n * @param {Object}    phoneDetails  - Information about the phone.\n */\nconst PhoneDetailComponent = ({\n  classes,\n  error,\n  fetchData,\n  handleBuy,\n  handleClose,\n  phoneDetails\n}) => (\n  <React.Fragment>\n    <Dialog\n      fullScreen={true}\n      open={true}\n      onClose={handleClose}\n      aria-labelledby=\"responsive-dialog-title\">\n      <DialogTitle id=\"responsive-dialog-title\" disableTypography={true}>\n        <Typography align=\"center\" color=\"primary\" variant=\"h3\">\n          {_.get(phoneDetails, 'name')}\n        </Typography>\n      </DialogTitle>\n      <DialogContent className={classes.content}>\n        <div className={classes.images}>\n          {_.get(phoneDetails, 'images', []).map((tile, index) => (\n            <div key={index} className={classes.imgContainer}>\n              <img\n                className={classes.img}\n                src={`${window.location.protocol}//${window.location.hostname}:4000${tile}`}\n                alt=\"\"\n                maxheight=\"100%\"\n                width=\"auto\"\n              />\n            </div>\n          ))}\n        </div>\n        <div className={classes.tableContainer}>\n          <Table className={classes.table}>\n            <TableBody>\n              <TableRow>\n                <TableCell>\n                  <Typography className={classes.titleCell}>Brand</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>{_.get(phoneDetails, 'brand')}</Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>\n                  <Typography className={classes.titleCell}>Launch year</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>{_.get(phoneDetails, 'year')}</Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>\n                  <Typography className={classes.titleCell}>Price</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>{_.get(phoneDetails, 'price')} €</Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>\n                  <Typography className={classes.titleCell}>Available colors</Typography>\n                </TableCell>\n                <TableCell>\n                  {_.get(phoneDetails, 'colors', []).map((color, index) => (\n                    <Chip\n                      key={index}\n                      className={classes.chip}\n                      color=\"secondary\"\n                      variant=\"outlined\"\n                      label={color}\n                    />\n                  ))}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>\n                  <Typography className={classes.titleCell}>Description</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography className={classes.description} paragraph={true}>\n                    {_.get(phoneDetails, 'description')}\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </div>\n      </DialogContent>\n      <DialogActions>\n        <Button color=\"primary\" onClick={handleBuy} variant=\"outlined\">\n          Buy\n        </Button>\n        <Button autoFocus color=\"primary\" onClick={handleClose} variant=\"outlined\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n    <ErrorDialog\n      error={error}\n      leftButtonHandler={fetchData}\n      leftButtonText={'Try again'}\n      rightButtonHandler={handleClose}\n      rightButtonText={'Close'}\n    />\n  </React.Fragment>\n);\n\nPhoneDetailComponent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  error: PropTypes.string,\n  fetchData: PropTypes.func.isRequired,\n  handleBuy: PropTypes.func.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  phoneDetails: PropTypes.object\n};\n\nexport default withMobileDialog()(withStyles(styles)(PhoneDetailComponent));\n","import _ from 'lodash';\nimport { connect } from 'react-redux';\nimport { compose, withHandlers, withState, lifecycle } from 'recompose';\nimport axios from 'axios';\n\nimport { setLastSelectedPhoneId, setSelectedPhoneId } from '../../actions';\nimport PhoneDetailComponent from './PhoneDetailComponent';\n\nconst mapStateToProps = state => ({\n  selectedPhoneId: _.get(state, 'selectedPhoneId')\n});\n\nconst mapDispatchToProps = null;\n\nconst ReduxConnector = connect(\n  mapStateToProps,\n  mapDispatchToProps\n);\n\nexport default compose(\n  ReduxConnector,\n  withState('phoneDetails', 'setPhoneDetails', null),\n  withState('error', 'setError', null),\n  withHandlers({\n    fetchData: ({ selectedPhoneId, setError, setPhoneDetails }) => () => {\n      console.log(\n        `Fetching data from ${window.location.protocol}//${window.location.hostname}:4000/phones`\n      );\n      axios({\n        url: `${window.location.protocol}//${window.location.hostname}:4000/phones`,\n        method: 'post',\n        data: {\n          query: `\n            query Phones {\n              phone (id: ${selectedPhoneId}) {\n                id,\n                brand,\n                colors,\n                description,\n                images,\n                name,\n                price,\n                web,\n                year\n              } \n           }\n            `\n        }\n      })\n        .then(result => {\n          setError(null);\n          setPhoneDetails(_.get(result, 'data.data.phone', null));\n        })\n        .catch(error => {\n          console.log(error);\n          setError('Error fetching phone details from server.');\n        });\n    }\n  }),\n  withHandlers({\n    handleBuy: ({ phoneDetails }) => () => {\n      window.open(_.get(phoneDetails, 'web', '_blank'));\n    },\n    handleClose: ({ dispatch, phoneDetails }) => () => {\n      dispatch(setLastSelectedPhoneId(phoneDetails.id));\n      dispatch(setSelectedPhoneId(null));\n    }\n  }),\n  lifecycle({\n    componentDidMount() {\n      this.props.fetchData();\n    }\n  })\n)(PhoneDetailComponent);\n","import PhoneDetailComponentHOC from './PhoneDetailComponentHOC';\nexport default PhoneDetailComponentHOC;\n","/**\n * @file Dispays brief information of a phone.\n */\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport styles from './styles.css.js';\n\n/**\n * Component to display brief information of a phone.\n * @param {Object}    classes           - Object returned by withStyles method to apply CSS-in-JS styles to the component.\n * @param {boolean}   favorite          - Flag toindicate if the user hasmarked the phone as favorite.\n * @param {boolean}   focus             - Flag to indicate if the card should have the focus.\n * @param {function}  onLearnMoreClick  - Function that opens a dialog with detailed information about the phone.\n * @param {Object}    phone             - Brief information of the phone.\n * @param {function}  toogleFavorite    - Funtion to toggle if the user marks the phone as favorite or not.\n */\nconst PhonePreview = ({ classes, favorite, focus, onLearnMoreClick, phone, toogleFavorite }) => (\n  <Card raised={true} className={classes.card} focus={focus.toString()}>\n    <CardHeader\n      className={classes.header}\n      title={phone.name}\n      titleTypographyProps={{ color: 'primary', variant: 'h6' }}\n    />\n    <CardMedia\n      className={classes.media}\n      image={`${window.location.protocol}//${window.location.hostname}:4000${phone.thumbnail}`}\n      title={phone.name}\n    />\n    <CardContent className={classes.content}>\n      <Typography variant=\"body2\">{phone.summary}</Typography>\n    </CardContent>\n    <CardActions>\n      <Grid container alignItems=\"center\" direction=\"row\" spacing={16}>\n        <Grid item xs={5}>\n          <TextField\n            InputLabelProps={{\n              color: 'primary'\n            }}\n            InputProps={{\n              readOnly: true,\n              endAdornment: <InputAdornment position=\"end\">€</InputAdornment>\n            }}\n            label=\"From\"\n            fullWidth\n            value={phone.price}\n            variant=\"filled\"\n          />\n        </Grid>\n        <Grid item xs={2}>\n          <IconButton aria-label=\"Add to favorites\" onClick={toogleFavorite}>\n            <FavoriteIcon color={favorite ? 'secondary' : 'inherit'} />\n          </IconButton>\n        </Grid>\n        <Grid item xs={5}>\n          <Button\n            size=\"small\"\n            color=\"primary\"\n            className={classes.learMore}\n            fullWidth\n            onClick={onLearnMoreClick}>\n            Learn More\n          </Button>\n        </Grid>\n      </Grid>\n    </CardActions>\n  </Card>\n);\n\nPhonePreview.propTypes = {\n  classes: PropTypes.object.isRequired,\n  favorite: PropTypes.bool.isRequired,\n  focus: PropTypes.bool.isRequired,\n  onLearnMoreClick: PropTypes.func.isRequired,\n  phone: PropTypes.object.isRequired,\n  toogleFavorite: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(PhonePreview);\n","export default theme => ({\n  card: {\n    '&:hover': {\n      boxShadow: `0px 5px 5px -3px ${theme.palette.primary[400]}, 0px 8px 10px 1px ${\n        theme.palette.primary[300]\n      }, 0px 3px 14px 2px ${theme.palette.primary[200]}`\n    }\n  },\n  header: {\n    userSelect: 'none'\n  },\n  media: {\n    height: 200,\n    paddingTop: '56.25%'\n  },\n  content: {\n    height: 150,\n    overflowX: 'auto',\n    paddingTop: '10px',\n    paddingBottom: '10px'\n  },\n  learMore: {\n    textAlign: 'right'\n  }\n});\n","import PhonePreviewHOC from './PhonePreviewHOC';\nexport default PhonePreviewHOC;\n","import { connect } from 'react-redux';\nimport { compose, withHandlers, withStateHandlers } from 'recompose';\n\nimport { setSelectedPhoneId } from '../../actions';\nimport PhonePreview from './PhonePreview';\n\nexport default compose(\n  connect(\n    null,\n    null\n  ),\n  withStateHandlers(\n    () => ({\n      favorite: false\n    }),\n    {\n      toogleFavorite: ({ favorite }) => () => ({ favorite: !favorite })\n    }\n  ),\n  withHandlers({\n    onLearnMoreClick: ({ dispatch, phone }) => () => {\n      dispatch(setSelectedPhoneId(phone.id));\n    }\n  })\n)(PhonePreview);\n","/**\n * @file Component that displays a grid with all the available phones with some information about each one.\n */\n\nimport { withStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Select from '@material-ui/core/Select';\n\nimport PhonePreview from '../PhonePreview';\nimport styles from './styles.css.js';\n\n/**\n * Component that displays a grid with all the available phones with some information about each one.\n * @param {Array}     brandList           - List of available brands.\n * @param {Object}    classes             - Object returned by withStyles method to apply CSS-in-JS styles to the component.\n * @param {Array}     filteredPhoneList   - List of phones to be displayed.\n * @param {Array}     lastSelectedPhoneId - Id of the last selected phone by the user.\n * @param {Array}     selectedBrands      - List of brands selected by the user.\n * @param {function}  setSelectedBrands   - Function to update the brands selected by the user.\n */\nconst PhoneListContainer = ({\n  brandList,\n  classes,\n  filteredPhoneList,\n  lastSelectedPhoneId,\n  selectedBrands,\n  setSelectedBrands\n}) => (\n  <React.Fragment>\n    <Grid container direction=\"row\" spacing={16}>\n      <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\n        <FormControl className={classes.filters} fullWidth>\n          <InputLabel shrink htmlFor=\"brand-label-placeholder\">\n            Filter by brand\n          </InputLabel>\n          <Select\n            value={selectedBrands}\n            onChange={e => setSelectedBrands(e.target.value)}\n            input={<Input name=\"brand\" id=\"brand-label-placeholder\" />}\n            displayEmpty\n            multiple\n            name=\"brand\">\n            {brandList.map((brand, index) => (\n              <MenuItem key={index} value={brand}>\n                {brand}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n    </Grid>\n    <Grid container direction=\"row\" spacing={16}>\n      {filteredPhoneList.map((phone, index) => (\n        <Grid item key={index} xs={12} sm={6} md={4} lg={3} xl={2}>\n          <PhonePreview phone={phone} focus={lastSelectedPhoneId === phone.id}/>\n        </Grid>\n      ))}\n    </Grid>\n  </React.Fragment>\n);\n\nPhoneListContainer.propTypes = {\n  brandList: PropTypes.array.isRequired,\n  classes: PropTypes.object.isRequired,\n  filteredPhoneList: PropTypes.array.isRequired,\n  lastSelectedPhoneId: PropTypes.number,\n  selectedBrands: PropTypes.array.isRequired,\n  setSelectedBrands: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(PhoneListContainer);\n","export default {\n  filters: {\n    paddingTop: '10px',\n    paddingBottom: '10px'\n  }\n};\n","/**\n * @file Higher-Order-Component to apply logic to PhoneListContainer component.\n */\n\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nimport { compose, defaultProps, withPropsOnChange, withState } from 'recompose';\n\nimport PhoneListContainer from './PhoneListContainer';\n\nconst mapStateToProps = state => {\n  const phoneList = _.get(state, 'phoneList');\n  const brands = _.map(phoneList, 'brand');\n\n  return {\n    brandList: _.uniq(brands),\n    lastSelectedPhoneId: _.get(state, 'lastSelectedPhoneId'),\n    phoneList\n  };\n};\n\nconst mapDispatchToProps = null;\n\nconst ReduxConnector = connect(\n  mapStateToProps,\n  mapDispatchToProps\n);\n\nexport default compose(\n  ReduxConnector,\n  defaultProps({\n    brandList: [],\n    phoneList: []\n  }),\n  withState('selectedBrands', 'setSelectedBrands', []),\n  withPropsOnChange(['selectedBrands'], ({ phoneList, selectedBrands }) => ({\n    filteredPhoneList: _.isEmpty(selectedBrands)\n      ? phoneList\n      : _.filter(phoneList, phone => {\n          return _.includes(selectedBrands, phone.brand);\n        })\n  }))\n)(PhoneListContainer);\n","import PhoneListContainerHOC from './PhoneListContainerHOC';\nexport default PhoneListContainerHOC;\n","import Spinner from './Spinner';\nexport default Spinner;\n","/**\n * @file Component to show while waiting for the data to be fetched from the back-end.\n */\n\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nimport styles from './styles.css.js';\n\n/**\n * Component to show while waiting for the data to be fetched from the back-end.\n * @param {Object} classes - Object returned by withStyles method to apply CSS-in-JS styles to the component.\n */\nconst Spinner = ({ classes }) => (\n  <div className={classes.root}>\n    <div className={classes.content}>\n      <Typography align=\"center\" color=\"primary\" variant=\"h4\">\n        Loading. Please, wait...\n      </Typography>\n      <div className={classes.spinner}>\n        <i className=\"fas fa-spinner fa-pulse fa-10x\" />\n      </div>\n    </div>\n  </div>\n);\n\nSpinner.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Spinner);\n","export default theme => ({\n  root: {\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    flexGrow: 1\n  },\n  content: {\n    margin: 'auto'\n  },\n  spinner: {\n    textAlign: 'center',\n    padding: '15px',\n    color: theme.palette.primary.main\n  }\n});\n","/**\n * @file Higher-Order-Component to choose which component to render depending on the application current state.\n */\n\nimport _ from 'lodash';\nimport { branch, compose, renderComponent, renderNothing } from 'recompose';\nimport { connect } from 'react-redux';\n\nimport PhoneDetailComponent from '../PhoneDetailComponent';\nimport PhoneListContainer from '../PhoneListContainer';\nimport Spinner from '../Spinner';\n\nconst mapStateToProps = state => ({\n  isDataLoaded: _.get(state, 'isDataLoaded'),\n  phoneList: _.get(state, 'phoneList'),\n  selectedPhoneId: _.get(state, 'selectedPhoneId')\n});\n\nconst mapDispatchToProps = null;\n\nconst ReduxConnector = connect(\n  mapStateToProps,\n  mapDispatchToProps\n);\n\nexport default compose(\n  ReduxConnector,\n  // Depending on the current application state, decide which component will be rendered.\n  branch(({ isDataLoaded }) => !isDataLoaded, renderComponent(Spinner)),\n  branch(\n    ({ selectedPhoneId }) => selectedPhoneId === null,\n    renderComponent(PhoneListContainer),\n    renderComponent(PhoneDetailComponent)\n  )\n)(renderNothing());\n","import AppRouterHOC from './AppRouterHOC';\nexport default AppRouterHOC;\n","/**\n * @file Application component (root component).\n */\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nimport AppRouter from '../AppRouter';\nimport ErrorDialog from '../ErrorDialog';\nimport logo from '../../resources/logos/gs-logo.png';\nimport styles from './styles.css.js';\n\n/**\n * Application component.\n * @param {Object}    classes         - Object returned by withStyles method to apply CSS-in-JS styles to the component.\n * @param {function}  contactUs       - Function that triggers opening an external page to contact GuideSmiths.\n * @param {String}    error           - Text that contains information in case some error occurs.\n * @param {Object}    fetchData       - Function that triggers fetching phones information from back-end.\n * @param {Object}    goToGuideSmiths - Function that triggers opens a new window to navigate to GuideSmiths.\n */\nconst App = ({ classes, contactUs, error, fetchData, goToGuideSmiths }) => (\n  <div className={classes.root}>\n    <header className={classes.header}>\n      <img className={classes.logo} src={logo} alt=\"gs-logo\" height=\"50px\" onClick={goToGuideSmiths} />\n      <Typography color=\"primary\" variant=\"h4\">\n        PhoneCatalogApp\n      </Typography>\n    </header>\n    <div className={classes.body}>\n      <AppRouter />\n      <ErrorDialog error={error} leftButtonHandler={fetchData} leftButtonText={'Try again'} />\n    </div>\n    <footer className={classes.footer}>\n      <Button color=\"primary\" onClick={contactUs}>\n        Contact Us\n      </Button>\n    </footer>\n  </div>\n);\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n  contactUs: PropTypes.func.isRequired,\n  error: PropTypes.string,\n  fetchData: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(App);\n","export default theme => ({\n  root: {\n    minHeight: '100vh',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  header: {\n    padding: '15px',\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    alignContent: 'center',\n    userSelect: 'none'\n  },\n  logo: {\n    cursor: 'pointer'\n  },\n  body: {\n    padding: '15px',\n    backgroundColor: theme.palette.primary[50],\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  footer: {\n    padding: '15px',\n    textAlign: 'right'\n  }\n});\n","/**\n * @file Higher-Order-Component to add logic to App component.\n */\nimport { compose, lifecycle, withHandlers, withState } from 'recompose';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nimport { setDataLoaded, setPhoneList } from '../../actions';\nimport App from './App';\n\nconst mapStateToProps = null;\nconst mapDispatchToProps = null;\n\nconst ReduxConnector = connect(\n  mapStateToProps,\n  mapDispatchToProps\n);\n\nexport default compose(\n  ReduxConnector,\n  withState('error', 'setError', null),\n  withHandlers({\n    contactUs: () => () => {\n      window.open('https://www.guidesmiths.com/contact', '_blank');\n    },\n    fetchData: ({ dispatch, setError }) => () => {\n      console.log(\n        `Fetching data from ${window.location.protocol}//${window.location.hostname}:4000/phones`\n      );\n      axios({\n        url: `${window.location.protocol}//${window.location.hostname}:4000/phones`,\n        method: 'post',\n        data: {\n          query: `\n            query Phones {\n              phones {\n                id,\n                brand,\n                name,\n                price,\n                summary,\n                thumbnail\n              } \n           }\n            `\n        }\n      })\n        .then(result => {\n          setError(null);\n          dispatch(setPhoneList(result.data.data.phones));\n          dispatch(setDataLoaded(true));\n        })\n        .catch(error => {\n          console.log(error);\n          setError('Error fetching phones information from server.');\n        });\n    },\n    goToGuideSmiths: () => () => {\n      window.open('https://www.guidesmiths.com/', 'web', '_blank');\n    }\n  }),\n  lifecycle({\n    componentDidMount() {\n      this.props.fetchData();\n    }\n  })\n)(App);\n","import AppHOC from './AppHOC';\nexport default AppHOC;\n","/**\n * @file Definition of the redux reducers.\n */\n\nimport ACTIONS from '../actions';\n\n// Initial state\nconst initialState = {\n  isDataLoaded: false,\n  phoneList: [],\n  selectedPhoneId: null,\n  lastSelectedPhoneId: null\n};\n\n// Root reducer\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_DATA_LOADED:\n      return { ...state, isDataLoaded: action.payload };\n\n    case ACTIONS.SET_LAST_SELECTED_PHONE_ID:\n      return { ...state, lastSelectedPhoneId: action.payload };\n\n    case ACTIONS.SET_PHONE_LIST:\n      return { ...state, phoneList: action.payload };\n\n    case ACTIONS.SET_SELECTED_PHONE_ID:\n      return { ...state, selectedPhoneId: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;\n","import theme from './theme';\nexport default theme;\n","/**\n * @file Definition of the material-ui theme used in the application.\n */\n\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport pink from '@material-ui/core/colors/pink';\nimport teal from '@material-ui/core/colors/teal';\n\nexport default createMuiTheme({\n  typography: {\n    useNextVariants: true\n  },\n  // Custom palette\n  palette: {\n    primary: teal,\n    secondary: pink\n  }\n});\n","/**\n * @file Entry point.\n */\n\nimport { Provider } from 'react-redux';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\n\nimport * as serviceWorker from './serviceWorker';\nimport App from './components/App';\nimport configureAppStore from './store/configureAppStore';\nimport theme from './theme';\n\nimport './index.css';\n\n// FontAwesome icons (https://fontawesome.com/)\nimport '@fortawesome/fontawesome-free/js/all.min';\n\nReactDOM.render(\n  <Provider store={configureAppStore()}>\n    <MuiThemeProvider theme={theme}>\n      <App />\n    </MuiThemeProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/**\n * @file Configuration of the redux store.\n */\n\nimport { applyMiddleware, createStore, compose } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\n\nimport rootReducer from '../reducers'\n\nexport default () => {\n  if (process.env.NODE_ENV === 'production') {\n    return createStore(\n      rootReducer,\n      applyMiddleware(\n        thunkMiddleware // lets us dispatch() functions\n      )\n    );\n  } else {\n    const { createLogger } = require('redux-logger');\n\n    const loggerMiddleware = createLogger();\n\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    const store = createStore(\n      rootReducer,\n      composeEnhancers(\n        applyMiddleware(\n          thunkMiddleware, // lets us dispatch() functions\n          loggerMiddleware // neat middleware that logs actions\n        )\n      )\n    );\n\n    console.log('Initial redux state: %o', store.getState());\n\n    return store;\n  }\n};\n"],"sourceRoot":""}